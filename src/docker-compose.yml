version: "3.2"

services:

  seq:
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5340:80"

  sqldata:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
    ports:
      - "5433:1433"
    volumes:
      - eshop-sqldata:/var/opt/mssql

  nosqldata:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - eshop-nosqldata:/data/db

  basketdata:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - eshop-basketdata:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"

  identity-api:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:identity.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - SpaClient=http://3.231.251.109:5104
      - XamarinCallback=http://3.231.251.109:5105/xamarincallback
      - ConnectionString=r=sqldata;Database=Microsoft.eShopOnContainers.Service.IdentityDb;User Id=sa;Password=Pass@word} # change
      - MvcClient=http://3.231.251.109:5100
      - BasketApiClient=http://3.231.251.109:5103
      - OrderingApiClient=http://3.231.251.109:5102
      - MobileShoppingAggClient=http://3.231.251.109:5120
      - WebShoppingAggClient=http://3.231.251.109:5121
      - WebhooksApiClient=http://3.231.251.109:5113
      - WebhooksWebClient=http://3.231.251.109:5114
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5105:80"
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    depends_on:
      - sqldata

  basket-api:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=${ESHOP_AZURE_REDIS_BASKET_DB:-basketdata} # change
      - identityUrl=http://identity-api
      - IdentityUrlExternal=http://3.231.251.109:5105
      - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq} # change
      - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME} # change
      - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD} # change
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
      - PATH_BASE=/basket-api
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5103:80"
      - "9103:81"
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    depends_on:
      - basketdata
      - identity-api
      - rabbitmq

  catalog-api:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString=${ESHOP_AZURE_CATALOG_DB:-Server=sqldata;Database=Microsoft.eShopOnContainers.Services.CatalogDb;User Id=sa;Password=Pass@word} # change
      - PicBaseUrl=${ESHOP_STORAGE_CATALOG_URL} # change
      - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq} # change
      - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME} # change
      - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD} # change
      - AzureStorageAccountName=${ESHOP_AZURE_STORAGE_CATALOG_NAME} # change
      - AzureStorageAccountKey=${ESHOP_AZURE_STORAGE_CATALOG_KEY} # change
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - GRPC_PORT=81
      - PORT=80
      - PATH_BASE=/catalog-api
    ports:
      - "5101:80"
      - "9101:81"
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      - sqldata
      - rabbitmq

  ordering-api:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=${ESHOP_AZURE_ORDERING_DB:-Server=sqldata;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User Id=sa;Password=Pass@word} # change
      - identityUrl=http://identity-api
      - IdentityUrlExternal=http://3.231.251.109:5105
      - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq} # change
      - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME} # change
      - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD} # change
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - CheckUpdateTime=30000
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
      - Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ=Verbose
      - Serilog__MinimumLevel__Override__ordering-api=Verbose
      - PATH_BASE=/ordering-api
      - GRPC_PORT=81
      - PORT=80
    ports:
      - "5102:80"
      - "9102:81"
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    depends_on:
      - sqldata
      - rabbitmq

  ordering-backgroundtasks:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:ordering.backgroundtasks
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=${ESHOP_AZURE_ORDERING_DB:-Server=sqldata;Database=Microsoft.eShopOnContainers.Services.OrderingDb;User Id=sa;Password=Pass@word} # change
      - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq} # change
      - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME} # change
      - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD} # change
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - CheckUpdateTime=30000
      - GracePeriodTime=1
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
      - Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ=Verbose
    ports:
      - "5111:80"
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.BackgroundTasks/Dockerfile
    depends_on:
      - sqldata
      - rabbitmq

  payment-api:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:payment.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq} # change
      - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME} # change
      - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD} # change
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - Serilog__MinimumLevel__Override__payment-api.IntegrationEvents.EventHandling=Verbose
      - Serilog__MinimumLevel__Override__Microsoft.eShopOnContainers.BuildingBlocks.EventBusRabbitMQ=Verbose
    ports:
      - "5108:80"
    build:
      context: .
      dockerfile: Services/Payment/Payment.API/Dockerfile
    depends_on:
      - rabbitmq

  webhooks-api:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:webhooks.api
    environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_URLS=http://0.0.0.0:80
          - ConnectionString=${ESHOP_AZURE_WEBHOOKS_DB:-Server=sqldata;Database=Microsoft.eShopOnContainers.Services.WebhooksDb;User Id=sa;Password=Pass@word} # change
          - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq} # change
          - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME} # change
          - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD} # change
          - IdentityUrl=http://identity-api
          - IdentityUrlExternal=http://3.231.251.109:5105
    ports:
      - "5113:80"
    build:
      context: .
      dockerfile: Services/Webhooks/Webhooks.API/Dockerfile
    depends_on:
      - sqldata

  mobileshoppingapigw:
    image: envoyproxy/envoy:v1.11.1
    volumes:
      - ./ApiGateways/Envoy/config/mobileshopping:/etc/envoy
    ports:
      - "5200:80"
      - "15200:8001"

  mobileshoppingagg:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:mobileshoppingagg
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__basket=http://basket-api
      - urls__catalog=http://catalog-api
      - urls__orders=http://ordering-api
      - urls__identity=http://identity-api
      - urls__grpcBasket=http://basket-api:81
      - urls__grpcCatalog=http://catalog-api:81
      - urls__grpcOrdering=http://ordering-api:81
      - CatalogUrlHC=http://catalog-api/hc
      - OrderingUrlHC=http://ordering-api/hc
      - IdentityUrlHC=http://identity-api/hc
      - BasketUrlHC=http://basket-api/hc
      - PaymentUrlHC=http://payment-api/hc
      - IdentityUrlExternal=http://3.231.251.109:5105
    ports:
      - "5120:80"
    build:
      context: .
      dockerfile: ApiGateways/Mobile.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - basket-api

  webshoppingagg:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:webshoppingagg
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__basket=http://basket-api
      - urls__catalog=http://catalog-api
      - urls__orders=http://ordering-api
      - urls__identity=http://identity-api
      - urls__grpcBasket=http://basket-api:81
      - urls__grpcCatalog=http://catalog-api:81
      - urls__grpcOrdering=http://ordering-api:81
      - CatalogUrlHC=http://catalog-api/hc
      - OrderingUrlHC=http://ordering-api/hc
      - IdentityUrlHC=http://identity-api/hc
      - BasketUrlHC=http://basket-api/hc
      - PaymentUrlHC=http://payment-api/hc
      - IdentityUrlExternal=http://3.231.251.109:5105
    ports:
      - "5121:80"
    build:
      context: .
      dockerfile: ApiGateways/Web.Bff.Shopping/aggregator/Dockerfile
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - basket-api

  ordering-signalrhub:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:ordering.signalrhub
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - EventBusConnection=${ESHOP_AZURE_SERVICE_BUS:-rabbitmq} # change
      - EventBusUserName=${ESHOP_SERVICE_BUS_USERNAME} # change
      - EventBusPassword=${ESHOP_SERVICE_BUS_PASSWORD} # change
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - identityUrl=http://identity-api
    ports:
      - "5112:80"
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.SignalrHub/Dockerfile
    depends_on:
      - nosqldata
      - sqldata
      - identity-api
      - rabbitmq
      - ordering-api
      - catalog-api
      - basket-api

  webstatus:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:webstatus
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - HealthChecksUI__HealthChecks__0__Name=WebMVC HTTP Check
      - HealthChecksUI__HealthChecks__0__Uri=http://webmvc/hc
      - HealthChecksUI__HealthChecks__1__Name=WebSPA HTTP Check
      - HealthChecksUI__HealthChecks__1__Uri=http://webspa/hc
      - HealthChecksUI__HealthChecks__2__Name=Web Shopping Aggregator GW HTTP Check
      - HealthChecksUI__HealthChecks__2__Uri=http://webshoppingagg/hc
      - HealthChecksUI__HealthChecks__3__Name=Mobile Shopping Aggregator HTTP Check
      - HealthChecksUI__HealthChecks__3__Uri=http://mobileshoppingagg/hc
      - HealthChecksUI__HealthChecks__4__Name=Ordering HTTP Check
      - HealthChecksUI__HealthChecks__4__Uri=http://ordering-api/hc
      - HealthChecksUI__HealthChecks__5__Name=Basket HTTP Check
      - HealthChecksUI__HealthChecks__5__Uri=http://basket-api/hc
      - HealthChecksUI__HealthChecks__6__Name=Catalog HTTP Check
      - HealthChecksUI__HealthChecks__6__Uri=http://catalog-api/hc
      - HealthChecksUI__HealthChecks__7__Name=Identity HTTP Check
      - HealthChecksUI__HealthChecks__7__Uri=http://identity-api/hc
      - HealthChecksUI__HealthChecks__8__Name=Payments HTTP Check
      - HealthChecksUI__HealthChecks__8__Uri=http://payment-api/hc
      - HealthChecksUI__HealthChecks__9__Name=Ordering SignalRHub HTTP Check
      - HealthChecksUI__HealthChecks__9__Uri=http://ordering-signalrhub/hc
      - HealthChecksUI__HealthChecks__10__Name=Ordering HTTP Background Check
      - HealthChecksUI__HealthChecks__10__Uri=http://ordering-backgroundtasks/hc
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5107:80"
    build:
      context: .
      dockerfile: Web/WebStatus/Dockerfile

  webspa:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:webspa
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - IdentityUrl=http://3.231.251.109:5105
      - PurchaseUrl=http://3.231.251.109:5202
      - IdentityUrlHC=http://identity-api/hc
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - SignalrHubUrl=http://3.231.251.109:5202
    ports:
      - "5104:80"
    build:
      context: .
      dockerfile: Web/WebSPA/Dockerfile
      args:
        NODE_IMAGE: ${NODE_IMAGE:-node:12.0}
    depends_on:
      - webshoppingagg
      - webshoppingapigw

  webmvc:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:webmvc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - PurchaseUrl=http://webshoppingapigw
      - IdentityUrl=http://3.231.251.109:5105
      - SignalrHubUrl=http://3.231.251.109:5202
      - IdentityUrlHC=http://identity-api/hc
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
    ports:
      - "5100:80"
    build:
      context: .
      dockerfile: Web/WebMVC/Dockerfile
    depends_on:
      - webshoppingagg
      - webshoppingapigw

  webhooks-client:
    image: public.ecr.aws/h2y1x0t6/eshoponcontainers_images:webhooks.client
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Token=6168DB8D-DC58-4094-AF24-483278923590      # Webhooks are registered with this token (any value is valid) but the client won't check it
      - IdentityUrl=http://3.231.251.109:5105
      - CallBackUrl=http://3.231.251.109:5114
      - WebhooksUrl=http://webhooks-api
      - SelfUrl=http://webhooks-client/
    ports:
      - "5114:80"
    build:
      context: .
      dockerfile: Web/WebhookClient/Dockerfile
    depends_on:
      - webhooks-api

  webshoppingapigw:
    image: envoyproxy/envoy:v1.11.1
    volumes:
      - ./ApiGateways/Envoy/config/webshopping:/etc/envoy
    ports:
      - "5202:80"
      - "15202:8001"
